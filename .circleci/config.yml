version: 2.1

#
# PIPELINE PARAMETERS
#
parameters:
  run-post-dev-workflow:
    description: >
      An internal flag used by this pipeline to indicate if it's already
      beyond the dev workflow. When this is true, the post-dev workflow
      will be executed. Do not manually set this. The pipeline itself will
      be responsible for setting this.
    type: boolean
    default: false
  version-to-test:
    description: >
      An internal parameter used by this pipeline to determine which version
      of the orb to run integration tests on. Do not set it manually. The
      pipeline itself will be responsible for setting this.
    type: string
    # This version must have been already published manually in order for
    # this pipeline to work. Note that during the execution of the dev
    # workflow, this is just a placeholder (that must point to a valid version).
    # When this pipeline triggers the post-dev workflow, it will also set
    # this to the correct value.
    default: 0.1.0

#
# ORBS
#
orbs:
  service-pipeline: relaxdiego/service-pipeline@<< pipeline.parameters.version-to-test >>
  # https://circleci.com/developer/orbs/orb/circleci/orb-tools
  orb-tools: circleci/orb-tools@10.0
  # https://circleci.com/developer/orbs/orb/circleci/bats
  bats: circleci/bats@1.0
  # https://circleci.com/developer/orbs/orb/circleci/shellcheck
  shellcheck: circleci/shellcheck@2.0
  # https://circleci.com/developer/orbs/orb/circleci/circleci-cli
  cli: circleci/circleci-cli@0.1
  # https://circleci.com/developer/orbs/orb/circleci/jq
  jq: circleci/jq@2.2


#
# JOBS
#
jobs:
  build:
    description: >
      Uses the CLI to "compile" src/ to orb.yml.
    executor: cli/default
    steps:
      - checkout
      - run:
          name: Run `circleci orb pack`
          command: |
            VERSION=$(cat VERSION | tr -d '[[:space:]]')
            echo "Got '${VERSION}' from VERSION file."

            BUILD_ID="${VERSION}+${CIRCLE_SHA1:0:7}.${CIRCLE_BUILD_NUM}"
            echo "BUILD_ID is ${BUILD_ID}"

            # This file header will be parsed by subsequent jobs
            echo "# BUILD_ID: ${BUILD_ID}" > orb.yml

            circleci orb pack --skip-update-check src >> orb.yml
      - persist_to_workspace:
          root: .
          paths:
            - orb.yml

  publish-dev-pre-release:
    description: >
      Uses the CLI to publish the orb to the registry. Expects the workspace
      to the packed/compiled orb.yml file.
    executor: cli/default
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run `circleci orb publish`
          command: |
            BUILD_ID=$(awk '/^# BUILD_ID:/{print $NF}' orb.yml | tr -d '[[:space:]]')
            circleci orb publish --skip-update-check orb.yml \
              relaxdiego/service-pipeline@dev:${BUILD_ID}.dev \
              --token $CIRCLE_TOKEN

  trigger-post-dev-workflow:
    description: >
      Trigger the post-dev workflow against the build this pipeline just
      published in the dev workflow.
    docker:
      - image: cimg/base:stable
    steps:
      - jq/install
      - run:
          name: Run scripts/trigger-post-dev-workflow.sh
          command: .circleci/scripts/trigger-post-dev-workflow.sh

#
# WORKFLOWS
#
workflows:
  dev:
    unless: << pipeline.parameters.run-post-dev-workflow >>
    jobs:
      - build:
          name: Build orb

      - orb-tools/lint:
          name: Lint YAML files

      - shellcheck/check:
          name: Syntax check shell scripts
          dir: ./src/scripts
          exclude: SC2148

      - bats/run:
          name: Run BATS
          path: ./src/tests

      - publish-dev-pre-release:
          name: Publish dev pre-release
          context: orb-publishing
          requires:
            - Build orb
            - Lint YAML files
            - Syntax check shell scripts
            - Run BATS
          filters:
            branches:
              only:
                - main
                - release/.*
            tags:
              ignore:
                - .*

      - trigger-post-dev-workflow:
          name: Trigger post-dev workflow
          requires:
            - Publish dev pre-release

  # post-dev:
  #   when: << pipeline.parameters.post-dev-workflow >>
  #   jobs:
  #     - integration-test:
  #         name: Run integration tests
  #
      # - publish:
      #     name: promote-to-qa-repo
      #     to:   relaxdiego/service-pipeline-qa
      #     requires:
      #       - integration-test
      #
      # - approve-promotion-to-production:
      #     type: approval
      #     requires:
      #       - promote-to-qa-repo
      #
      # - publish:
      #     name: promote-to-production-repo
      #     to:   relaxdiego/service-pipeline
      #     requires:
      #       - approve-promotion-to-production
