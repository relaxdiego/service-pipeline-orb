version: 2.1

#
# ORBS
#
orbs:
  # https://circleci.com/developer/orbs/orb/circleci/orb-tools
  orb-tools: circleci/orb-tools@10.0
  # https://circleci.com/developer/orbs/orb/circleci/bats
  bats: circleci/bats@1.0
  # https://circleci.com/developer/orbs/orb/circleci/shellcheck
  shellcheck: circleci/shellcheck@2.0
  # https://circleci.com/developer/orbs/orb/circleci/circleci-cli
  cli: circleci/circleci-cli@0.1

#
# JOBS
#
jobs:
  build:
    description: >
      Uses the CLI to "compile" src/ to orb.yml. This job also writes the
      build ID to BUILD_ID.
    executor: cli/default
    steps:
      - checkout
      - run:
          name: Run `circleci orb pack`
          command: |
            VERSION=$(cat VERSION | tr -d '[[:space:]]')
            echo "Got '${VERSION}' from VERSION file."

            BUILD_ID="${VERSION}+${CIRCLE_SHA1:0:7}.${CIRCLE_BUILD_NUM}"
            echo "BUILD_ID is ${BUILD_ID}"
            echo -n $BUILD_ID > BUILD_ID

            echo "# BUILD_ID: ${BUILD_ID}" > orb.yml
            circleci orb pack --skip-update-check src >> orb.yml
      - persist_to_workspace:
          root: .
          paths:
            - orb.yml
            - BUILD_ID

  publish:
    description: >
      Uses the CLI to publish the orb to a registry. Expects the workspace
      to have the files orb.yml and BUILD_ID.
    executor: cli/default
    parameters:
      pre-release:
        default: ""
        description: >
          An optional pre-release version that will be appended to the orb's
          version in the case when it's not yet promoted to production.
          See https://semver.org/ for more info on pre-releases.
        type: enum
        enum: ["dev", "qa", ""]
      registry:
        description: >
          The orb registry (in the format <namespace>/<orb-name>) where the
          build is going to be published.
        type: string
      token-variable:
        description: >
          The name of the environment variable that contains the token needed
          to publish to the given orb registry.
        type: env_var_name
        default: CIRCLE_TOKEN
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Debug workspace
          command: |
            ls -l .
            cat BUILD_ID
      - run:
          name: Publish orb
          command: |
            circleci orb publish --skip-update-check orb.yml \
              << parameters.registry >>@<<# parameters.pre-release >>dev:<</ parameters.pre-release >>$(cat BUILD_ID)+${CIRCLE_SHA1:0:7}.${CIRCLE_BUILD_NUM}<<# parameters.pre-release>>.<<parameters.pre-release>><</ parameters.pre-release >> \
              <<# parameters.token-variable >>--token $<< parameters.token-variable >> <</ parameters.token-variable >>

#
# WORKFLOWS
#
workflows:
  orb-pipeline:
    jobs:
      - build:
          name: Build orb

      # - orb-tools/lint:
      #     name: lint-yaml-files
      #
      # - shellcheck/check:
      #     name: check-shell-scripts-syntax
      #     dir: ./src/scripts
      #     exclude: SC2148
      #
      # - bats/run:
      #     name: run-bats-tests
      #     path: ./src/tests

      - publish:
          name: Publish dev pre-release
          registry: relaxdiego/service-pipeline
          context: orb-publishing
          requires:
            - build
            # - lint-yaml-files
            # - check-shell-scripts-syntax
            # - run-bats-tests
          filters:
            branches:
              only:
                - main
                - release/.*
            tags:
              ignore:
                - .*

      # - integration-test:
      #     requires:
      #       - publish-to-dev-repo
      #
      # - publish:
      #     name: promote-to-qa-repo
      #     to:   relaxdiego/service-pipeline-qa
      #     requires:
      #       - integration-test
      #
      # - approve-promotion-to-production:
      #     type: approval
      #     requires:
      #       - promote-to-qa-repo
      #
      # - publish:
      #     name: promote-to-production-repo
      #     to:   relaxdiego/service-pipeline
      #     requires:
      #       - approve-promotion-to-production
